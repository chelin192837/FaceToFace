<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.FacTeachMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.model.FacTeach">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="iphone" jdbcType="VARCHAR" property="iphone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="advantage" jdbcType="VARCHAR" property="advantage" />
    <result column="active" jdbcType="INTEGER" property="active" />
    <result column="other_one" jdbcType="VARCHAR" property="other_one" />
    <result column="other_two" jdbcType="VARCHAR" property="other_two" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
  </resultMap>

    <sql id="Example_Where_Clause">
      <where>
        <foreach collection="oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
      <where>
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
          <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
              <foreach collection="criteria.criteria" item="criterion">
                <choose>
                  <when test="criterion.noValue">
                    and ${criterion.condition}
                  </when>
                  <when test="criterion.singleValue">
                    and ${criterion.condition} #{criterion.value}
                  </when>
                  <when test="criterion.betweenValue">
                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                  </when>
                  <when test="criterion.listValue">
                    and ${criterion.condition}
                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                    </foreach>
                  </when>
                </choose>
              </foreach>
            </trim>
          </if>
        </foreach>
      </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, iphone, password, sex, major, subject, flag, advantage, active, other_one,
    other_two, create_time
  </sql>
    <select id="selectByExample" parameterType="com.macro.mall.model.FacTeachExample" resultMap="BaseResultMap">
      select
      <if test="distinct">
        distinct
      </if>
      <include refid="Base_Column_List" />
      from fac_teach
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
      <if test="orderByClause != null">
        order by ${orderByClause}
      </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from fac_teach
      where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fac_teach
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.macro.mall.model.FacTeachExample">
      delete from fac_teach
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
    </delete>
    <insert id="insert" parameterType="com.macro.mall.model.FacTeach">
    insert into fac_teach (id, name, iphone,
      password, sex, major,
      subject, flag, advantage,
      active, other_one, other_two,
      create_time)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{iphone,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR},
      #{subject,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, #{advantage,jdbcType=VARCHAR},
      #{active,jdbcType=INTEGER}, #{other_one,jdbcType=VARCHAR}, #{other_two,jdbcType=VARCHAR},
      #{create_time,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.macro.mall.model.FacTeach">
      insert into fac_teach
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
          id,
        </if>
        <if test="name != null">
          name,
        </if>
        <if test="iphone != null">
          iphone,
        </if>
        <if test="password != null">
          password,
        </if>
        <if test="sex != null">
          sex,
        </if>
        <if test="major != null">
          major,
        </if>
        <if test="subject != null">
          subject,
        </if>
        <if test="flag != null">
          flag,
        </if>
        <if test="advantage != null">
          advantage,
        </if>
        <if test="active != null">
          active,
        </if>
        <if test="other_one != null">
          other_one,
        </if>
        <if test="other_two != null">
          other_two,
        </if>
        <if test="create_time != null">
          create_time,
        </if>
      </trim>
      <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
          #{id,jdbcType=BIGINT},
        </if>
        <if test="name != null">
          #{name,jdbcType=VARCHAR},
        </if>
        <if test="iphone != null">
          #{iphone,jdbcType=VARCHAR},
        </if>
        <if test="password != null">
          #{password,jdbcType=VARCHAR},
        </if>
        <if test="sex != null">
          #{sex,jdbcType=VARCHAR},
        </if>
        <if test="major != null">
          #{major,jdbcType=VARCHAR},
        </if>
        <if test="subject != null">
          #{subject,jdbcType=VARCHAR},
        </if>
        <if test="flag != null">
          #{flag,jdbcType=VARCHAR},
        </if>
        <if test="advantage != null">
          #{advantage,jdbcType=VARCHAR},
        </if>
        <if test="active != null">
          #{active,jdbcType=INTEGER},
        </if>
        <if test="other_one != null">
          #{other_one,jdbcType=VARCHAR},
        </if>
        <if test="other_two != null">
          #{other_two,jdbcType=VARCHAR},
        </if>
        <if test="create_time != null">
          #{create_time,jdbcType=TIMESTAMP},
        </if>
      </trim>
    </insert>
    <select id="countByExample" parameterType="com.macro.mall.model.FacTeachExample" resultType="java.lang.Integer">
      select count(*) from fac_teach
      <if test="_parameter != null">
        <include refid="Example_Where_Clause" />
      </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
      update fac_teach
      <set>
        <if test="record.id != null">
          id = #{record.id,jdbcType=BIGINT},
        </if>
        <if test="record.name != null">
          name = #{record.name,jdbcType=VARCHAR},
        </if>
        <if test="record.iphone != null">
          iphone = #{record.iphone,jdbcType=VARCHAR},
        </if>
        <if test="record.password != null">
          password = #{record.password,jdbcType=VARCHAR},
        </if>
        <if test="record.sex != null">
          sex = #{record.sex,jdbcType=VARCHAR},
        </if>
        <if test="record.major != null">
          major = #{record.major,jdbcType=VARCHAR},
        </if>
        <if test="record.subject != null">
          subject = #{record.subject,jdbcType=VARCHAR},
        </if>
        <if test="record.flag != null">
          flag = #{record.flag,jdbcType=VARCHAR},
        </if>
        <if test="record.advantage != null">
          advantage = #{record.advantage,jdbcType=VARCHAR},
        </if>
        <if test="record.active != null">
          active = #{record.active,jdbcType=INTEGER},
        </if>
        <if test="record.other_one != null">
          other_one = #{record.other_one,jdbcType=VARCHAR},
        </if>
        <if test="record.other_two != null">
          other_two = #{record.other_two,jdbcType=VARCHAR},
        </if>
        <if test="record.create_time != null">
          create_time = #{record.create_time,jdbcType=TIMESTAMP},
        </if>
      </set>
      <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>
    <update id="updateByExample" parameterType="map">
      update fac_teach
      set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      iphone = #{record.iphone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=VARCHAR},
      advantage = #{record.advantage,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=INTEGER},
      other_one = #{record.other_one,jdbcType=VARCHAR},
      other_two = #{record.other_two,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP}
      <if test="_parameter != null">
        <include refid="Update_By_Example_Where_Clause" />
      </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.macro.mall.model.FacTeach">
      update fac_teach
      <set>
        <if test="name != null">
          name = #{name,jdbcType=VARCHAR},
        </if>
        <if test="iphone != null">
          iphone = #{iphone,jdbcType=VARCHAR},
        </if>
        <if test="password != null">
          password = #{password,jdbcType=VARCHAR},
        </if>
        <if test="sex != null">
          sex = #{sex,jdbcType=VARCHAR},
        </if>
        <if test="major != null">
          major = #{major,jdbcType=VARCHAR},
        </if>
        <if test="subject != null">
          subject = #{subject,jdbcType=VARCHAR},
        </if>
        <if test="flag != null">
          flag = #{flag,jdbcType=VARCHAR},
        </if>
        <if test="advantage != null">
          advantage = #{advantage,jdbcType=VARCHAR},
        </if>
        <if test="active != null">
          active = #{active,jdbcType=INTEGER},
        </if>
        <if test="other_one != null">
          other_one = #{other_one,jdbcType=VARCHAR},
        </if>
        <if test="other_two != null">
          other_two = #{other_two,jdbcType=VARCHAR},
        </if>
        <if test="create_time != null">
          create_time = #{create_time,jdbcType=TIMESTAMP},
        </if>
      </set>
      where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.FacTeach">
    update fac_teach
    set name = #{name,jdbcType=VARCHAR},
      iphone = #{iphone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      advantage = #{advantage,jdbcType=VARCHAR},
      active = #{active,jdbcType=INTEGER},
      other_one = #{other_one,jdbcType=VARCHAR},
      other_two = #{other_two,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>
